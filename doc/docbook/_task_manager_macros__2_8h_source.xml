<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__task_manager_macros__2_8h_source" xml:lang="en-US">
<title>TaskManagerMacros_2.h</title>
<programlisting linenumbering="unnumbered">1 <emphasis role="comment">//</emphasis>
2 <emphasis role="comment">//&#32;TaskManager&#32;Macros</emphasis>
3 <emphasis role="comment">//</emphasis>
4 <emphasis role="comment">//&#32;Used&#32;to&#32;implement&#32;in-process&#32;calls&#32;to&#32;TaskManager&#32;routines</emphasis>
5 <emphasis role="comment">//&#32;such&#32;as&#32;Yield,&#32;and&#32;continuing&#32;on&#32;the&#32;next&#32;statement</emphasis>
6 <emphasis role="comment">//</emphasis>
7 <emphasis role="comment">//&#32;Based&#32;on&#32;a&#32;complete&#32;abuse&#32;of&#32;the&#32;switch(){}&#32;statement,&#32;akin&#32;to&#32;the&#32;Duff&#32;Device</emphasis>
8 <emphasis role="comment">//</emphasis>
9 
14 <emphasis role="preprocessor">#if&#32;!defined(TASKMANAGERMACROS_DEFINED)</emphasis>
15 <emphasis role="preprocessor">#define&#32;TASKMANAGERMACROS_DEFINED</emphasis>
16 
23 <emphasis role="comment">/*&#32;@{&#32;*/</emphasis>
24 
31 <emphasis role="preprocessor">#define&#32;TM_BEGIN()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
32 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;static&#32;unsigned&#32;int&#32;__tmNext__&#32;=&#32;0;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
33 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;switch(__tmNext__)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
34 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;case&#32;0:</emphasis>
35 <emphasis role="comment">//&#32;for&#32;compatibility&#32;with&#32;older&#32;code</emphasis>
36 <emphasis role="comment">//#define&#32;TM_INIT()&#32;TM_BEGIN()</emphasis>
37 
44 <emphasis role="preprocessor">#define&#32;TM_END()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
45 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;default:&#32;&#32;&#32;&#32;break;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
46 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
47 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;__tmNext__&#32;=&#32;0;</emphasis>
48 
52 <emphasis role="preprocessor">#define&#32;TM_RETURN()&#32;{&#32;__tmNext__&#32;=&#32;0;&#32;return;&#32;}</emphasis>
53 
54 
62 <emphasis role="preprocessor">#define&#32;TM_YIELD(n)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
63 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__tmNext__&#32;=&#32;n;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
64 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TaskMgr.yield();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
65 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;case&#32;n:&#32;&#32;;&#32;&#32;&#32;}</emphasis>
66 
75 <emphasis role="preprocessor">#define&#32;TM_YIELDDELAY(n,ms)&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
76 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__tmNext__&#32;=&#32;n;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
77 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TaskMgr.yieldDelay(ms);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
78 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;case&#32;n:&#32;;&#32;}</emphasis>
79 
87 <emphasis role="preprocessor">#define&#32;TM_YIELDMESSAGE(n)&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
88 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__tmNext__&#32;=&#32;n;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
89 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TaskMgr.yieldForMessage();&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
90 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;case&#32;n:&#32;;&#32;}</emphasis>
91 
100 <emphasis role="preprocessor">#define&#32;TM_YIELDMESSAGETIMEOUT(n,msto)&#32;&#32;{&#32;&#32;&#32;\</emphasis>
101 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__tmNext__&#32;=&#32;n;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
102 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TaskMgr.yieldForMessage(msto);&#32;&#32;\</emphasis>
103 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;case&#32;n:&#32;&#32;;&#32;}</emphasis>
104 
123 <emphasis role="preprocessor">#define&#32;TM_ADDSUBTASK(id,&#32;task)&#32;TaskMgr.addAutoWaitMessage(id,&#32;task);</emphasis>
124 
130 <emphasis role="preprocessor">#define&#32;TM_BEGINSUB()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
131 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;static&#32;byte&#32;__callingTask__;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
132 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;TM_BEGIN();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
133 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;TaskMgr.getSource(__callingTask__);</emphasis>
134 
144 <emphasis role="preprocessor">#define&#32;TM_BEGINSUB_P(vtype,&#32;vlocal)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
145 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;static&#32;vtype&#32;vlocal;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
146 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;TM_BEGINSUB();&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
147 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;memcpy((void*)&amp;vlocal,&#32;TaskMgr.getMessage(),&#32;sizeof(vtype));</emphasis>
148 
154 <emphasis role="preprocessor">#define&#32;TM_RETURNSUB()&#32;&#32;{&#32;TaskMgr.sendMessage(__callingTask__,&#32;NULL,&#32;0);&#32;__tmNext__&#32;=&#32;0;&#32;return;&#32;}</emphasis>
155 
162 <emphasis role="preprocessor">#define&#32;TM_CALL(n,&#32;taskId)&#32;{&#32;TaskMgr.sendMessage(taskId,&#32;NULL,&#32;0);&#32;TM_YIELDMESSAGE(n);&#32;}</emphasis>
163 
177 <emphasis role="preprocessor">#define&#32;TM_CALL_P(n,&#32;taskId,&#32;vparam)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
178 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;TaskMgr.sendMessage(taskId,&#32;(void*)&amp;vparam,&#32;sizeof(vparam));&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
179 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TM_YIELDMESSAGE(n);&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
180 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}</emphasis>
181 
186 <emphasis role="preprocessor">#define&#32;TM_ENDSUB()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
187 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;default:&#32;&#32;&#32;&#32;break;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
188 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
189 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;TaskMgr.sendMessage(__callingTask__,&#32;NULL,&#32;0);&#32;&#32;\</emphasis>
190 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;__tmNext__&#32;=&#32;0;</emphasis>
191 
192 
206 <emphasis role="preprocessor">#define&#32;TM_REENTRANT(paramType,&#32;allParams,&#32;localp)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
207 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;paramType*&#32;&#32;localp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
208 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;bool&#32;__done;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
209 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int&#32;__i,&#32;__where;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
210 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;__done&#32;=&#32;false;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
211 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for(__i=0;&#32;allParams[__i].taskId!=0;&#32;__i++)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
212 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(allParams[__i].taskId==TaskMgr.myId())&#32;{&#32;__done=true;&#32;__where=__i;&#32;}&#32;&#32;&#32;&#32;&#32;\</emphasis>
213 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(__done)&#32;{&#32;localp&#32;=&#32;&amp;(allParams[__where]);&#32;&#32;&#32;&#32;}&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
214 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else&#32;return;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\</emphasis>
215 <emphasis role="preprocessor">&#32;&#32;&#32;&#32;}</emphasis>
217 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
